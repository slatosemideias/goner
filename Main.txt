game:GetService("StarterGui"):SetCore("SendNotification",{
    Title = "Fe espada goner loaded!",
    Text = "Made by Jinxx0g :3 - Modified with Bug System",
    Button1 = "okie",
    Button2 = "-",
    Duration = 30
})

wait(1)

-- // Servi√ßos
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- // Vari√°veis
local buggedPlayers = {}
local bugConnections = {}
local Remote = ReplicatedStorage.RE:FindFirstChild("1Gu1n")

-- // Cria√ß√£o da Tool
local tool = Instance.new("Tool")
tool.Name = "Sword goner"
tool.RequiresHandle = true
tool.CanBeDropped = true

local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(0.1, 0.1, 0.1)
handle.Massless = true
handle.Anchored = false
handle.CanCollide = false
handle.Transparency = 0.5
handle.Color = Color3.fromRGB(255, 0, 0)
local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshType = Enum.MeshType.Sphere
mesh.Scale = Vector3.new(0.05, 0.05, 0.05)
handle.Parent = tool

-- // Fun√ß√£o de notifica√ß√£o
local function createNotification(title, message, duration)
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = title,
        Text = message,
        Duration = duration or 3
    })
end

-- // Fun√ß√£o para aplicar bug em um player
local function bugPlayer(targetPlayer)
    if not Remote then
        createNotification("‚ùå Erro", "Remote n√£o encontrado!")
        return
    end
    
    if not targetPlayer or not targetPlayer.Character then
        createNotification("‚ùå Erro", "Player inv√°lido!")
        return
    end
    
    local playerName = targetPlayer.Name
    
    if buggedPlayers[playerName] then
        if bugConnections[playerName] then
            bugConnections[playerName]:Disconnect()
            bugConnections[playerName] = nil
        end
        buggedPlayers[playerName] = nil
        createNotification("üîì Bug Parado", playerName .. " foi desbugado!")
        return
    end
    
    buggedPlayers[playerName] = true
    createNotification("Bug Aplicado", playerName .. " foi bugado com o Sword goner!")
    
    bugConnections[playerName] = RunService.Stepped:Connect(function()
        local target = Players:FindFirstChild(playerName)
        if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
            if bugConnections[playerName] then
                bugConnections[playerName]:Disconnect()
                bugConnections[playerName] = nil
            end
            buggedPlayers[playerName] = nil
            return
        end
        
        local crazyVector = Vector3.new(
            math.random(1e25, 1e25),
            math.random(1e25, 1e25),
            math.random(1e25, 1e25)
        )
        
        local args = {
            [1] = target.Character.HumanoidRootPart,
            [2] = target.Character.HumanoidRootPart,
            [3] = crazyVector,
            [4] = target.Character.HumanoidRootPart.Position,
            [5] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
            [6] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
            [7] = 3000,
            [8] = 3000,
            [9] = { [1] = false },
            [10] = {
                [1] = 10000,
                [2] = Vector3.new(3000, 3000, 3000),
                [3] = BrickColor.new(29),
                [4] = 0.05,
                [5] = Enum.Material.SmoothPlastic,
                [6] = 0.05
            },
            [11] = true,
            [12] = false
        }
        
        Remote:FireServer(unpack(args))
    end)
end

-- // Detecta player clicado
local function getPlayerFromMouse(mouse)
    local target = mouse.Target
    if not target then return nil end
    local character = target.Parent
    while character and not character:FindFirstChild("Humanoid") do
        character = character.Parent
    end
    if character and character:FindFirstChild("Humanoid") then
        return Players:GetPlayerFromCharacter(character)
    end
    return nil
end

-- // IDs para equipar (completos e atualizados)
local itemIDs = {
    17770317484,
    17772174303,
    17822722698,
    17771175724,
    17812415139,
    17812417356,
    17822749561,
    892267099,
    892265784,
    892268340,
    11274394350
}

-- // Fun√ß√£o para equipar itens e executar scripts externos
local function equipItems(list)
    -- Remove duplicatas automaticamente
    local seen = {}
    local uniqueList = {}
    for _, id in ipairs(list) do
        if not seen[id] then
            seen[id] = true
            table.insert(uniqueList, id)
        end
    end

    -- Equipar os itens
    for _, id in ipairs(uniqueList) do
        local success, err = pcall(function()
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(id)
        end)
        if success then
            print("‚úÖ Item ID "..id.." equipado com sucesso!")
        else
            warn("‚ö†Ô∏è Falha ao equipar Item ID "..id.." | "..tostring(err))
        end
        task.wait(0.3)
    end

    -- Executa o remote ChangeBodyColor
    local bodyColorRemote = ReplicatedStorage:WaitForChild("Remotes"):FindFirstChild("ChangeBodyColor")
    if bodyColorRemote then
        local args = {[1] = "Really black"}
        bodyColorRemote:FireServer(unpack(args))
        print("üé® Remote ChangeBodyColor executado com sucesso!")
    end

    -- Executa scripts externos
    local externalScripts = {
        "https://raw.githubusercontent.com/267266273ffsfs/sumir/refs/heads/main/Main.txt",
        "https://raw.githubusercontent.com/267266273ffsfs/skins/refs/heads/main/Main.txt",
        "https://raw.githubusercontent.com/267266273ffsfs/audio/refs/heads/main/Main.txt",
        "https://raw.githubusercontent.com/267266273ffsfs/speed/refs/heads/main/Main.txt",
        "https://raw.githubusercontent.com/267266273ffsfs/flutuar/refs/heads/main/Main.txt"
    }

    for _, url in ipairs(externalScripts) do
        local success, err = pcall(function()
            loadstring(game:HttpGet(url))()
        end)
        if success then
            print("‚úÖ Script externo carregado: "..url)
        else
            warn("‚ö†Ô∏è Falha ao carregar script externo: "..url.." | "..tostring(err))
        end
        task.wait(0.3)
    end
end

-- Equipar tudo ao executar o script
equipItems(itemIDs)

-- // Equipar tool
tool.Equipped:Connect(function(mouse)
    local character = tool.Parent
    if character and character:FindFirstChild("Humanoid") and character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
        -- Equipar apar√™ncia principal
        local args = {12866137394}
        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
        
        -- Clique do mouse
        mouse.Button1Down:Connect(function()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
            if animator then
                local anim = Instance.new("Animation")
                anim.AnimationId = "rbxassetid://2410679501"
                local track = animator:LoadAnimation(anim)
                track:Play()
            end
            
            local targetPlayer = getPlayerFromMouse(mouse)
            if targetPlayer and targetPlayer ~= LocalPlayer then
                bugPlayer(targetPlayer)
            else
                createNotification("üí° Info", "Clique em um player para aplicar/remover o bug!")
            end
        end)
        
        createNotification("Sword goner Equipado", "Clique em players para aplicar/remover bug!")
    end
end)

-- // Desequipar tool ‚Üí equipa s√≥ o item 12866137394
tool.Unequipped:Connect(function()
    local args = {12866137394}
    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
    createNotification("‚öîÔ∏è sword goner Guardado", "Tool desequipado! Visual restaurado.")
end)

-- // Limpeza quando player sai
Players.PlayerRemoving:Connect(function(player)
    local playerName = player.Name
    if bugConnections[playerName] then
        bugConnections[playerName]:Disconnect()
        bugConnections[playerName] = nil
    end
    buggedPlayers[playerName] = nil
end)

-- // Comandos de chat
LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "/stopallbugs" then
        for _, connection in pairs(bugConnections) do
            if connection then connection:Disconnect() end
        end
        bugConnections = {}
        buggedPlayers = {}
        createNotification("üõë Todos os Bugs Parados", "Todos os players foram desbugados!")
    elseif message:lower() == "/buggedlist" then
        local count = 0
        for _ in pairs(buggedPlayers) do count = count + 1 end
        createNotification("üìã Lista de Bugados", count > 0 and (count.." players bugados") or "Nenhum player bugado")
    end
end)

-- // Remote ApplyEmmiter loop
task.spawn(function()
    while task.wait(1) do
        local args = {
            [1] = 18635845425,
            [2] = "087SmokeBlack"
        }
        local success, err = pcall(function()
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ApplyEmmiter"):InvokeServer(unpack(args))
        end)
        if not success then
            warn("‚ö†Ô∏è Falha ApplyEmmiter | "..tostring(err))
        end
    end
end)

-- // Adiciona tool ao invent√°rio
tool.Parent = LocalPlayer.Backpack
createNotification("‚úÖ Sword goner Carregado", "Tool adicionada ao invent√°rio! Use /stopallbugs para parar todos os bugs.")
